// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  habits    Habit[]
}

model Habit {
  id          String     @id @default(cuid())
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  name        String
  description String?
  startDate   DateTime
  frequency   Freq
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  logs        HabitLog[]
  reminders   Reminder[]
}

model HabitLog {
  id        String      @id @default(cuid())
  habitId   String
  habit     Habit       @relation(fields: [habitId], references: [id], onDelete: Cascade)
  date      DateTime
  status    HabitStatus @default(Pending)
  createdAt DateTime    @default(now())

  @@unique([habitId, date])
}

model Reminder {
  id           String         @id @default(cuid())
  habitId      String
  habit        Habit          @relation(fields: [habitId], references: [id])
  reminderTime DateTime
  method       ReminderMethod @default(Email)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

enum Freq {
  Daily
  Weekly
}

enum HabitStatus {
  Done
  Missed
  Pending
}

enum ReminderMethod {
  Email
  SMS
  PushNotification
}
